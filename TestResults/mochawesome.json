{
  "stats": {
    "suites": 20,
    "tests": 40,
    "passes": 40,
    "pending": 0,
    "failures": 0,
    "start": "2018-05-17T00:15:28.193Z",
    "end": "2018-05-17T00:15:28.328Z",
    "duration": 135,
    "testsRegistered": 40,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "e6595487-a4c9-47a1-9b1b-21208207a1d4",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "3cfcf13a-e103-4238-941c-8d8dcb6389be",
        "title": "DataStore<T>",
        "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/datastore/index.spec.ts",
        "file": "/src/datastore/index.spec.ts",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "753aadca-7d42-42b2-a711-69daad012138",
            "title": "#getName()",
            "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/datastore/index.spec.ts",
            "file": "/src/datastore/index.spec.ts",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return name DataStore<T>",
                "fullTitle": "DataStore<T> #getName() should return name DataStore<T>",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var list = new index_1.default();\nchai_1.expect(list.getName()).to.equal('DataStore<T>');",
                "err": {},
                "isRoot": false,
                "uuid": "36e8d8af-af51-437a-a815-1010691a6a4c",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "36e8d8af-af51-437a-a815-1010691a6a4c"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "52f0640f-976e-42c5-b5f3-0a651385ac98",
            "title": "#add()",
            "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/datastore/index.spec.ts",
            "file": "/src/datastore/index.spec.ts",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "DataStore<T> #add() \"before all\" hook",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "list = new index_1.default();",
                "err": {},
                "isRoot": false,
                "uuid": "5015a900-6f23-4e34-9afa-93bce4013f47",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 0 when 0 added at index 0",
                "fullTitle": "DataStore<T> #add() should return 0 when 0 added at index 0",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.add(0);\nchai_1.expect(list.getElement(0)).to.equal(0);",
                "err": {},
                "isRoot": false,
                "uuid": "a98fc3da-fcce-444b-b697-eb109e5d1d07",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return 1 when 1 added at index 1",
                "fullTitle": "DataStore<T> #add() should return 1 when 1 added at index 1",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.add(1);\nchai_1.expect(list.getElement(1)).to.equal(1);",
                "err": {},
                "isRoot": false,
                "uuid": "ffe60c52-ea7e-4614-9b94-3e09e17abec2",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should throw when get out of bound index",
                "fullTitle": "DataStore<T> #add() should throw when get out of bound index",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai_1.expect(function () { return list.getElement(100); }).to.throw();",
                "err": {},
                "isRoot": false,
                "uuid": "2aacc87f-b48d-4c49-92d4-430dc655ab0d",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "a98fc3da-fcce-444b-b697-eb109e5d1d07",
              "ffe60c52-ea7e-4614-9b94-3e09e17abec2",
              "2aacc87f-b48d-4c49-92d4-430dc655ab0d"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "7ed016e8-8159-49f0-b7f3-e0a84936d0ed",
            "title": "#insert()",
            "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/datastore/index.spec.ts",
            "file": "/src/datastore/index.spec.ts",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "DataStore<T> #insert() \"before all\" hook",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "list = new index_1.default();",
                "err": {},
                "isRoot": false,
                "uuid": "77c97b57-81d4-43a6-bb89-62147298858d",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 0 when 0 inserted at index 0",
                "fullTitle": "DataStore<T> #insert() should return 0 when 0 inserted at index 0",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.insert(0, 0);\nchai_1.expect(list.getElement(0)).to.equal(0);",
                "err": {},
                "isRoot": false,
                "uuid": "bccf102e-cfb7-4c1b-946e-9d99bc2172d7",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return 1 when 1 inserted at index 1",
                "fullTitle": "DataStore<T> #insert() should return 1 when 1 inserted at index 1",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.insert(1, 1);\nchai_1.expect(list.getElement(1)).to.equal(1);",
                "err": {},
                "isRoot": false,
                "uuid": "3eecabb1-4b52-4a02-b0b4-9ffe9a79b902",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return 10 when 10 inserted at index 10",
                "fullTitle": "DataStore<T> #insert() should return 10 when 10 inserted at index 10",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.insert(10, 10);\nchai_1.expect(list.getElement(10)).to.equal(10);",
                "err": {},
                "isRoot": false,
                "uuid": "ec388b37-4f4b-46e2-aa40-85399bd0b732",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return 10 when 20 inserted at index 10 and getElement(11)",
                "fullTitle": "DataStore<T> #insert() should return 10 when 20 inserted at index 10 and getElement(11)",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.insert(10, 20);\nchai_1.expect(list.getElement(11)).to.equal(10);",
                "err": {},
                "isRoot": false,
                "uuid": "807df767-c8b8-4af6-8afe-9a8866bb1d51",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return length 12 when length()",
                "fullTitle": "DataStore<T> #insert() should return length 12 when length()",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "console.log(list.toString());\nchai_1.expect(list.length()).to.equal(12);",
                "err": {},
                "isRoot": false,
                "uuid": "d70fd197-3d60-4dc0-ac59-5a06bb430907",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should throw when get out of bound index",
                "fullTitle": "DataStore<T> #insert() should throw when get out of bound index",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai_1.expect(function () { return list.getElement(100); }).to.throw();",
                "err": {},
                "isRoot": false,
                "uuid": "d5e3f7a1-4566-43ca-a31e-65f31d583fd5",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "bccf102e-cfb7-4c1b-946e-9d99bc2172d7",
              "3eecabb1-4b52-4a02-b0b4-9ffe9a79b902",
              "ec388b37-4f4b-46e2-aa40-85399bd0b732",
              "807df767-c8b8-4af6-8afe-9a8866bb1d51",
              "d70fd197-3d60-4dc0-ac59-5a06bb430907",
              "d5e3f7a1-4566-43ca-a31e-65f31d583fd5"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "f342f33a-08e2-4431-b76e-f6d529f6940d",
            "title": "#remove()",
            "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/datastore/index.spec.ts",
            "file": "/src/datastore/index.spec.ts",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "DataStore<T> #remove() \"before all\" hook",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "list = new index_1.default();\nlist.add(0, 'Aa');\nlist.add(1, 'Bb');\nlist.add(2, 'Cc');\nlist.add(3, 'Dd');\nlist.add(4, 'Ee');\nlist.add(5, 'Ff');\nlist.add(6, 'Gg');\nlist.add(7, 'Hh');\nlist.add(8, 'Ii');\nlist.add(9, 'Jj');",
                "err": {},
                "isRoot": false,
                "uuid": "255cf843-2590-4844-b958-52d5c26942fb",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "should length return 9 when remove index 9",
                "fullTitle": "DataStore<T> #remove() should length return 9 when remove index 9",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.remove(9);\nchai_1.expect(list.length()).to.equal(9);\ndone();",
                "err": {},
                "isRoot": false,
                "uuid": "75035b5e-b62a-458b-846b-6c7b1a496880",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should length return 8 when remove index 8",
                "fullTitle": "DataStore<T> #remove() should length return 8 when remove index 8",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.remove(8);\nchai_1.expect(list.length()).to.equal(8);\ndone();",
                "err": {},
                "isRoot": false,
                "uuid": "6826df12-8b63-476a-8880-ede7672cd8e0",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "75035b5e-b62a-458b-846b-6c7b1a496880",
              "6826df12-8b63-476a-8880-ede7672cd8e0"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 3,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "c646c4c0-889d-4081-a875-22255541a4c3",
            "title": "#isEmpty()",
            "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/datastore/index.spec.ts",
            "file": "/src/datastore/index.spec.ts",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "DataStore<T> #isEmpty() \"before all\" hook",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "list = new index_1.default();\nlist.add(0, 'A');",
                "err": {},
                "isRoot": false,
                "uuid": "3a9929e3-ee0a-4f1a-a3de-484ce24bf87e",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return false when List has items",
                "fullTitle": "DataStore<T> #isEmpty() should return false when List has items",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai_1.expect(list.isEmpty()).to.equal(false);",
                "err": {},
                "isRoot": false,
                "uuid": "00524d13-32e9-4877-8f87-ae76309da0d1",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return true when List has no items",
                "fullTitle": "DataStore<T> #isEmpty() should return true when List has no items",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.remove(0);\nchai_1.expect(list.isEmpty()).to.equal(true);",
                "err": {},
                "isRoot": false,
                "uuid": "eda31e9c-e9c8-488f-8465-0337d622d3ae",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "00524d13-32e9-4877-8f87-ae76309da0d1",
              "eda31e9c-e9c8-488f-8465-0337d622d3ae"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "a6328ebd-8a27-4ca5-a81c-742254867f00",
            "title": "#length()",
            "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/datastore/index.spec.ts",
            "file": "/src/datastore/index.spec.ts",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "DataStore<T> #length() \"before all\" hook",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "list = new index_1.default();",
                "err": {},
                "isRoot": false,
                "uuid": "4c239d0c-5202-4cf5-82f6-77cc981cfc36",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 0 when List is empty",
                "fullTitle": "DataStore<T> #length() should return 0 when List is empty",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai_1.expect(list.length()).to.equal(0);\ndone();",
                "err": {},
                "isRoot": false,
                "uuid": "0b1a5a70-b8ca-4fd6-9e67-6a64fb1a4aa0",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return 10 when List has 10 items",
                "fullTitle": "DataStore<T> #length() should return 10 when List has 10 items",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.add(0, 'a');\nlist.add(1, 'b');\nlist.add(2, 'c');\nlist.add(3, 'd');\nlist.add(4, 'e');\nlist.add(5, 'f');\nlist.add(6, 'g');\nlist.add(7, 'h');\nlist.add(8, 'i');\nlist.add(9, 'j');\nchai_1.expect(list.length()).to.equal(10);\ndone();",
                "err": {},
                "isRoot": false,
                "uuid": "782ddd58-0f3a-47fa-ba91-3b8ee91deda0",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "0b1a5a70-b8ca-4fd6-9e67-6a64fb1a4aa0",
              "782ddd58-0f3a-47fa-ba91-3b8ee91deda0"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "6f9573ff-a151-460e-9fa0-7245a2729da2",
        "title": "Hello function",
        "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/hello/hello.spec.ts",
        "file": "/src/hello/hello.spec.ts",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return hello world",
            "fullTitle": "Hello function should return hello world",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var result = hello_1.default();\nchai_1.expect(result).to.equal('Hello World!');",
            "err": {},
            "isRoot": false,
            "uuid": "3a84cafa-60bd-4f7a-babf-569559dece3f",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "3a84cafa-60bd-4f7a-babf-569559dece3f"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "5e7a2d65-7e5d-4ef9-91d0-4f7b8771ea53",
        "title": "List<T>",
        "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/list/list.spec.ts",
        "file": "/src/list/list.spec.ts",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "6756b1ef-461f-49e7-984f-ed87b5edfae5",
            "title": "#getName()",
            "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/list/list.spec.ts",
            "file": "/src/list/list.spec.ts",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return name List<T>",
                "fullTitle": "List<T> #getName() should return name List<T>",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var list = new list_1.default();\nchai_1.expect(list.getName()).to.equal('List<T>');",
                "err": {},
                "isRoot": false,
                "uuid": "9d8f8117-1753-4e1e-9af7-a2e27d8a83f2",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "9d8f8117-1753-4e1e-9af7-a2e27d8a83f2"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "56b517eb-67fe-4c08-9750-76971f25e328",
            "title": "#add()",
            "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/list/list.spec.ts",
            "file": "/src/list/list.spec.ts",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "List<T> #add() \"before all\" hook",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "list = new list_1.default();",
                "err": {},
                "isRoot": false,
                "uuid": "7b0072ab-1937-426d-9c0b-3e87054981e2",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 0 when 0 added at index 0",
                "fullTitle": "List<T> #add() should return 0 when 0 added at index 0",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.add(0, 0);\nchai_1.expect(list.get(0)).to.equal(0);",
                "err": {},
                "isRoot": false,
                "uuid": "14b221ce-3a25-4cae-a14a-a8910fdeeb4e",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return 1 when 1 added at index 1",
                "fullTitle": "List<T> #add() should return 1 when 1 added at index 1",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.add(1, 1);\nchai_1.expect(list.get(1)).to.equal(1);",
                "err": {},
                "isRoot": false,
                "uuid": "72acb85d-42b1-4065-a7b5-3f66148a1e28",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return 10 when 10 added at index 10",
                "fullTitle": "List<T> #add() should return 10 when 10 added at index 10",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.add(10, 10);\nchai_1.expect(list.get(10)).to.equal(10);",
                "err": {},
                "isRoot": false,
                "uuid": "b94ed0bb-7bae-47ad-a022-0f58613abcac",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return 10 when 20 added at index 10 and get(11)",
                "fullTitle": "List<T> #add() should return 10 when 20 added at index 10 and get(11)",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.add(10, 20);\nchai_1.expect(list.get(11)).to.equal(10);",
                "err": {},
                "isRoot": false,
                "uuid": "a48462f7-7aac-401f-b9f8-be3a4cc1d7b3",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return size 12 when size()",
                "fullTitle": "List<T> #add() should return size 12 when size()",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai_1.expect(list.size()).to.equal(12);",
                "err": {},
                "isRoot": false,
                "uuid": "91dd43b9-d180-4ddf-8cf5-66ccfcd26bea",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should throw when get out of bound index",
                "fullTitle": "List<T> #add() should throw when get out of bound index",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai_1.expect(function () { return list.get(100); }).to.throw();",
                "err": {},
                "isRoot": false,
                "uuid": "ee7c559e-d812-43f8-9900-2f0132a6839a",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "14b221ce-3a25-4cae-a14a-a8910fdeeb4e",
              "72acb85d-42b1-4065-a7b5-3f66148a1e28",
              "b94ed0bb-7bae-47ad-a022-0f58613abcac",
              "a48462f7-7aac-401f-b9f8-be3a4cc1d7b3",
              "91dd43b9-d180-4ddf-8cf5-66ccfcd26bea",
              "ee7c559e-d812-43f8-9900-2f0132a6839a"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "be13a10a-f542-4893-8efe-cdd13e2eead4",
            "title": "#remove()",
            "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/list/list.spec.ts",
            "file": "/src/list/list.spec.ts",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "List<T> #remove() \"before all\" hook",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "list = new list_1.default();\nlist.add(0, 'Aa');\nlist.add(1, 'Bb');\nlist.add(2, 'Cc');\nlist.add(3, 'Dd');\nlist.add(4, 'Ee');\nlist.add(5, 'Ff');\nlist.add(6, 'Gg');\nlist.add(7, 'Hh');\nlist.add(8, 'Ii');\nlist.add(9, 'Jj');",
                "err": {},
                "isRoot": false,
                "uuid": "c9cb6663-f6ba-4418-aece-e1b5365772bf",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "should size return 9 when remove index 9",
                "fullTitle": "List<T> #remove() should size return 9 when remove index 9",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.remove(9);\nchai_1.expect(list.size()).to.equal(9);\ndone();",
                "err": {},
                "isRoot": false,
                "uuid": "f5919b2b-65fb-4d94-91c8-550124aeb71d",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should size return 8 when remove index 8",
                "fullTitle": "List<T> #remove() should size return 8 when remove index 8",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.remove(8);\nchai_1.expect(list.size()).to.equal(8);\ndone();",
                "err": {},
                "isRoot": false,
                "uuid": "ae773ded-c077-4cba-bb9b-024548b6d51e",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "f5919b2b-65fb-4d94-91c8-550124aeb71d",
              "ae773ded-c077-4cba-bb9b-024548b6d51e"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "10e9eec4-8449-403f-8a0d-680a26d1687c",
            "title": "#isEmpty()",
            "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/list/list.spec.ts",
            "file": "/src/list/list.spec.ts",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "List<T> #isEmpty() \"before all\" hook",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "list = new list_1.default();\nlist.add(0, 'A');",
                "err": {},
                "isRoot": false,
                "uuid": "d0ddf0b1-b638-47aa-9ad2-05c1f4439b7e",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return false when List has items",
                "fullTitle": "List<T> #isEmpty() should return false when List has items",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai_1.expect(list.isEmpty()).to.equal(false);",
                "err": {},
                "isRoot": false,
                "uuid": "7438aa11-cf7b-40bd-b946-cb3d45eb1e62",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return true when List has no items",
                "fullTitle": "List<T> #isEmpty() should return true when List has no items",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.remove(0);\nchai_1.expect(list.isEmpty()).to.equal(true);",
                "err": {},
                "isRoot": false,
                "uuid": "3e530478-a3da-43a0-8e92-7838da060600",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "7438aa11-cf7b-40bd-b946-cb3d45eb1e62",
              "3e530478-a3da-43a0-8e92-7838da060600"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "92d71927-e136-4c9f-b12a-b96f9338226a",
            "title": "#size()",
            "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/list/list.spec.ts",
            "file": "/src/list/list.spec.ts",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "List<T> #size() \"before all\" hook",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "list = new list_1.default();",
                "err": {},
                "isRoot": false,
                "uuid": "619561bc-0854-4e5a-8bc4-fc534405a1e0",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 0 when List is empty",
                "fullTitle": "List<T> #size() should return 0 when List is empty",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai_1.expect(list.size()).to.equal(0);\ndone();",
                "err": {},
                "isRoot": false,
                "uuid": "dfd0c3bd-8544-4c68-bb05-cfb0c416415f",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return 10 when List has 10 items",
                "fullTitle": "List<T> #size() should return 10 when List has 10 items",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.add(0, 'a');\nlist.add(1, 'b');\nlist.add(2, 'c');\nlist.add(3, 'd');\nlist.add(4, 'e');\nlist.add(5, 'f');\nlist.add(6, 'g');\nlist.add(7, 'h');\nlist.add(8, 'i');\nlist.add(9, 'j');\nchai_1.expect(list.size()).to.equal(10);\ndone();",
                "err": {},
                "isRoot": false,
                "uuid": "1eab280d-2b4f-4c4d-a0ab-fe81cf5175ba",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "dfd0c3bd-8544-4c68-bb05-cfb0c416415f",
              "1eab280d-2b4f-4c4d-a0ab-fe81cf5175ba"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "f438475f-33a3-4da5-94e6-123594c6d715",
        "title": "Stack<T>",
        "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/stack/index.spec.ts",
        "file": "/src/stack/index.spec.ts",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "825d4c0d-01bf-47d7-b24e-b07d4aadbbbf",
            "title": "#push()",
            "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/stack/index.spec.ts",
            "file": "/src/stack/index.spec.ts",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should peek return test when the test pushed",
                "fullTitle": "Stack<T> #push() should peek return test when the test pushed",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "myStack = new index_1.default();\nmyStack.push('test');\nchai_1.expect(myStack.peek()).equal('test');",
                "err": {},
                "isRoot": false,
                "uuid": "d602fda8-985e-4668-9056-603b81f37cbe",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return 9 when the 10 elements pushed",
                "fullTitle": "Stack<T> #push() should return 9 when the 10 elements pushed",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "myStack = new index_1.default();\nfor (var index = 0; index < 10; index++) {\n    var elem = index;\n    myStack.push(elem);\n}\nchai_1.expect(myStack.peek()).equal(9);",
                "err": {},
                "isRoot": false,
                "uuid": "f8af0cac-6123-48f5-9586-55911607e87b",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "d602fda8-985e-4668-9056-603b81f37cbe",
              "f8af0cac-6123-48f5-9586-55911607e87b"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "c06d4ed6-5f55-400a-b2b5-cef1f2eac50d",
            "title": "#pop()",
            "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/stack/index.spec.ts",
            "file": "/src/stack/index.spec.ts",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should throws Error [Stack overflow] when pop empty stack",
                "fullTitle": "Stack<T> #pop() should throws Error [Stack overflow] when pop empty stack",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "myStack = new index_1.default();\nchai_1.expect(myStack.pop).to.throw(Error);",
                "err": {},
                "isRoot": false,
                "uuid": "77d5ae83-6da8-442d-9d04-7db39285482a",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should pop return popTest when the popTest pushed",
                "fullTitle": "Stack<T> #pop() should pop return popTest when the popTest pushed",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "myStack = new index_1.default();\nmyStack.push('popTest');\nchai_1.expect(myStack.pop()).equal('popTest');",
                "err": {},
                "isRoot": false,
                "uuid": "8eec146c-9ba7-41b9-9ed3-9d2064a19bcd",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "77d5ae83-6da8-442d-9d04-7db39285482a",
              "8eec146c-9ba7-41b9-9ed3-9d2064a19bcd"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "bdf6ab19-7836-4e56-8c09-c881fbfe5bbe",
            "title": "#isEmpty()",
            "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/stack/index.spec.ts",
            "file": "/src/stack/index.spec.ts",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return true when stack is empty",
                "fullTitle": "Stack<T> #isEmpty() should return true when stack is empty",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "myStack = new index_1.default();\nchai_1.expect(myStack.isEmpty()).equal(true);",
                "err": {},
                "isRoot": false,
                "uuid": "63d40a72-e823-4dcb-a8a2-f40a65f127d2",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return false when stack is not empty",
                "fullTitle": "Stack<T> #isEmpty() should return false when stack is not empty",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "myStack = new index_1.default();\nmyStack.push(0);\nchai_1.expect(myStack.isEmpty()).equal(false);",
                "err": {},
                "isRoot": false,
                "uuid": "bcd03547-715e-46c9-a253-a08d6d54c093",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "63d40a72-e823-4dcb-a8a2-f40a65f127d2",
              "bcd03547-715e-46c9-a253-a08d6d54c093"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "fd9fa86c-956d-4273-aac9-bfe4aea1287a",
            "title": "#size()",
            "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/stack/index.spec.ts",
            "file": "/src/stack/index.spec.ts",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 0 when stack is empty",
                "fullTitle": "Stack<T> #size() should return 0 when stack is empty",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "myStack = new index_1.default();\nchai_1.expect(myStack.size()).equal(0);",
                "err": {},
                "isRoot": false,
                "uuid": "41b484e8-dcb8-49d8-9de5-855b21911ed1",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return 1 when stack has one item",
                "fullTitle": "Stack<T> #size() should return 1 when stack has one item",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "myStack = new index_1.default();\nmyStack.push(0);\nchai_1.expect(myStack.size()).equal(1);",
                "err": {},
                "isRoot": false,
                "uuid": "2cfa726f-2743-41b8-92a9-b2737b7b67dd",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "41b484e8-dcb8-49d8-9de5-855b21911ed1",
              "2cfa726f-2743-41b8-92a9-b2737b7b67dd"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "8d5dc19b-c582-4df4-a400-15e9b09c94cb",
            "title": "#clear()",
            "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/stack/index.spec.ts",
            "file": "/src/stack/index.spec.ts",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return true when stack called clear",
                "fullTitle": "Stack<T> #clear() should return true when stack called clear",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "myStack = new index_1.default();\nmyStack.push(0);\nmyStack.clear();\nchai_1.expect(myStack.isEmpty()).equal(true);",
                "err": {},
                "isRoot": false,
                "uuid": "fb004381-8ab3-4b42-8d71-d6788078c357",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return size 0 when stack called clear",
                "fullTitle": "Stack<T> #clear() should return size 0 when stack called clear",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "myStack = new index_1.default();\nmyStack.push(0);\nmyStack.clear();\nchai_1.expect(myStack.size()).equal(0);",
                "err": {},
                "isRoot": false,
                "uuid": "aa6eb6a8-b53e-4210-bbcf-bafd729bcdc6",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "fb004381-8ab3-4b42-8d71-d6788078c357",
              "aa6eb6a8-b53e-4210-bbcf-bafd729bcdc6"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2018
}