{
  "stats": {
    "suites": 20,
    "tests": 40,
    "passes": 40,
    "pending": 0,
    "failures": 0,
    "start": "2018-05-17T01:52:31.027Z",
    "end": "2018-05-17T01:52:31.107Z",
    "duration": 80,
    "testsRegistered": 40,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "9942024b-9fa6-410b-9fe8-9636cab80db6",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "50b41e69-5c81-4eb9-ba57-c8973be6d1fa",
        "title": "DataStore<T>",
        "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/datastore/index.spec.ts",
        "file": "/src/datastore/index.spec.ts",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "ab135ba4-8028-4946-89c2-c895ed6fe99f",
            "title": "#getName()",
            "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/datastore/index.spec.ts",
            "file": "/src/datastore/index.spec.ts",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return name DataStore<T>",
                "fullTitle": "DataStore<T> #getName() should return name DataStore<T>",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var list = new index_1.default();\nchai_1.expect(list.getName()).to.equal('DataStore<T>');",
                "err": {},
                "isRoot": false,
                "uuid": "f5cb820e-97fc-4a6a-87da-a94901bfb32a",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "f5cb820e-97fc-4a6a-87da-a94901bfb32a"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "8d0719ce-4d01-487d-98dd-3d5712e00b6b",
            "title": "#add()",
            "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/datastore/index.spec.ts",
            "file": "/src/datastore/index.spec.ts",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "DataStore<T> #add() \"before all\" hook",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "list = new index_1.default();",
                "err": {},
                "isRoot": false,
                "uuid": "94d6605e-b06d-4bf5-9b82-4ec0c09b25a4",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 0 when 0 added at index 0",
                "fullTitle": "DataStore<T> #add() should return 0 when 0 added at index 0",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.add(0);\nchai_1.expect(list.getElement(0)).to.equal(0);",
                "err": {},
                "isRoot": false,
                "uuid": "01bcbcd9-3a1b-405b-bf76-3746839d90a0",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return 1 when 1 added at index 1",
                "fullTitle": "DataStore<T> #add() should return 1 when 1 added at index 1",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.add(1);\nchai_1.expect(list.getElement(1)).to.equal(1);",
                "err": {},
                "isRoot": false,
                "uuid": "fefe2ad2-f657-4040-8654-92fcb731ccd2",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should throw when get out of bound index",
                "fullTitle": "DataStore<T> #add() should throw when get out of bound index",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai_1.expect(function () { return list.getElement(100); }).to.throw();",
                "err": {},
                "isRoot": false,
                "uuid": "2ba64a03-b5f8-4d31-a55b-7b3b8e8495e3",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "01bcbcd9-3a1b-405b-bf76-3746839d90a0",
              "fefe2ad2-f657-4040-8654-92fcb731ccd2",
              "2ba64a03-b5f8-4d31-a55b-7b3b8e8495e3"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "56e6ea64-cd62-4fe1-9d3a-d95558e4c55d",
            "title": "#insert()",
            "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/datastore/index.spec.ts",
            "file": "/src/datastore/index.spec.ts",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "DataStore<T> #insert() \"before all\" hook",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "list = new index_1.default();",
                "err": {},
                "isRoot": false,
                "uuid": "fd12e47e-a5eb-45ec-980b-06640f3ac1ac",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 0 when 0 inserted at index 0",
                "fullTitle": "DataStore<T> #insert() should return 0 when 0 inserted at index 0",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.insert(0, 0);\nchai_1.expect(list.getElement(0)).to.equal(0);",
                "err": {},
                "isRoot": false,
                "uuid": "b602b487-9cda-45b3-a733-3500f758c8bc",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return 1 when 1 inserted at index 1",
                "fullTitle": "DataStore<T> #insert() should return 1 when 1 inserted at index 1",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.insert(1, 1);\nchai_1.expect(list.getElement(1)).to.equal(1);",
                "err": {},
                "isRoot": false,
                "uuid": "88e05189-cca0-41a3-acca-b9b4420468b2",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return 10 when 10 inserted at index 10",
                "fullTitle": "DataStore<T> #insert() should return 10 when 10 inserted at index 10",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.insert(10, 10);\nchai_1.expect(list.getElement(10)).to.equal(10);",
                "err": {},
                "isRoot": false,
                "uuid": "8df6ed9d-1569-4085-b7a9-a9ff5b5c27af",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return 10 when 20 inserted at index 10 and getElement(11)",
                "fullTitle": "DataStore<T> #insert() should return 10 when 20 inserted at index 10 and getElement(11)",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.insert(10, 20);\nchai_1.expect(list.getElement(11)).to.equal(10);",
                "err": {},
                "isRoot": false,
                "uuid": "ae98491b-b7f1-4b48-823c-21a59b9440fc",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return length 12 when length()",
                "fullTitle": "DataStore<T> #insert() should return length 12 when length()",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "console.log(list.toString());\nchai_1.expect(list.length()).to.equal(12);",
                "err": {},
                "isRoot": false,
                "uuid": "b6721d64-be73-492b-ba06-6b05f7e050df",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should throw when get out of bound index",
                "fullTitle": "DataStore<T> #insert() should throw when get out of bound index",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai_1.expect(function () { return list.getElement(100); }).to.throw();",
                "err": {},
                "isRoot": false,
                "uuid": "ff3b8291-2d0c-43e4-9a7a-e28539dc39e9",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "b602b487-9cda-45b3-a733-3500f758c8bc",
              "88e05189-cca0-41a3-acca-b9b4420468b2",
              "8df6ed9d-1569-4085-b7a9-a9ff5b5c27af",
              "ae98491b-b7f1-4b48-823c-21a59b9440fc",
              "b6721d64-be73-492b-ba06-6b05f7e050df",
              "ff3b8291-2d0c-43e4-9a7a-e28539dc39e9"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "f096f825-1605-4703-b6a0-7ec068953368",
            "title": "#remove()",
            "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/datastore/index.spec.ts",
            "file": "/src/datastore/index.spec.ts",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "DataStore<T> #remove() \"before all\" hook",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "list = new index_1.default();\nlist.add(0, 'Aa');\nlist.add(1, 'Bb');\nlist.add(2, 'Cc');\nlist.add(3, 'Dd');\nlist.add(4, 'Ee');\nlist.add(5, 'Ff');\nlist.add(6, 'Gg');\nlist.add(7, 'Hh');\nlist.add(8, 'Ii');\nlist.add(9, 'Jj');",
                "err": {},
                "isRoot": false,
                "uuid": "b9684092-17df-407d-b660-1a44eb2937fd",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "should length return 9 when remove index 9",
                "fullTitle": "DataStore<T> #remove() should length return 9 when remove index 9",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.remove(9);\nchai_1.expect(list.length()).to.equal(9);\ndone();",
                "err": {},
                "isRoot": false,
                "uuid": "647720fb-c082-4444-ba79-0e440ba450b9",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should length return 8 when remove index 8",
                "fullTitle": "DataStore<T> #remove() should length return 8 when remove index 8",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.remove(8);\nchai_1.expect(list.length()).to.equal(8);\ndone();",
                "err": {},
                "isRoot": false,
                "uuid": "eca5f1fb-2964-47f7-a788-5fe813a491a9",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "647720fb-c082-4444-ba79-0e440ba450b9",
              "eca5f1fb-2964-47f7-a788-5fe813a491a9"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "07f0604b-358b-47a1-9e19-1fd6a8401ced",
            "title": "#isEmpty()",
            "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/datastore/index.spec.ts",
            "file": "/src/datastore/index.spec.ts",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "DataStore<T> #isEmpty() \"before all\" hook",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "list = new index_1.default();\nlist.add(0, 'A');",
                "err": {},
                "isRoot": false,
                "uuid": "1a631df4-930b-4daf-951a-1bd62a7284a7",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return false when List has items",
                "fullTitle": "DataStore<T> #isEmpty() should return false when List has items",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai_1.expect(list.isEmpty()).to.equal(false);",
                "err": {},
                "isRoot": false,
                "uuid": "10739417-f146-4fca-a86d-5cc9cadcb56d",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return true when List has no items",
                "fullTitle": "DataStore<T> #isEmpty() should return true when List has no items",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.remove(0);\nchai_1.expect(list.isEmpty()).to.equal(true);",
                "err": {},
                "isRoot": false,
                "uuid": "b3afc7ad-b537-4020-9702-99297155ff7f",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "10739417-f146-4fca-a86d-5cc9cadcb56d",
              "b3afc7ad-b537-4020-9702-99297155ff7f"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "baf2a6bd-fb8f-45ff-ac3c-28ccb18349cb",
            "title": "#length()",
            "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/datastore/index.spec.ts",
            "file": "/src/datastore/index.spec.ts",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "DataStore<T> #length() \"before all\" hook",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "list = new index_1.default();",
                "err": {},
                "isRoot": false,
                "uuid": "cd9226e5-36a6-4fec-8191-6d6c54d75835",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 0 when List is empty",
                "fullTitle": "DataStore<T> #length() should return 0 when List is empty",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai_1.expect(list.length()).to.equal(0);\ndone();",
                "err": {},
                "isRoot": false,
                "uuid": "565b1563-9f63-4be2-ab29-425a2c98a93c",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return 10 when List has 10 items",
                "fullTitle": "DataStore<T> #length() should return 10 when List has 10 items",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.add(0, 'a');\nlist.add(1, 'b');\nlist.add(2, 'c');\nlist.add(3, 'd');\nlist.add(4, 'e');\nlist.add(5, 'f');\nlist.add(6, 'g');\nlist.add(7, 'h');\nlist.add(8, 'i');\nlist.add(9, 'j');\nchai_1.expect(list.length()).to.equal(10);\ndone();",
                "err": {},
                "isRoot": false,
                "uuid": "cea1814c-ac85-4c94-be21-9c8928d1b43e",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "565b1563-9f63-4be2-ab29-425a2c98a93c",
              "cea1814c-ac85-4c94-be21-9c8928d1b43e"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "106561b1-5235-462d-9c54-47e4f90e73af",
        "title": "Hello function",
        "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/hello/hello.spec.ts",
        "file": "/src/hello/hello.spec.ts",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return hello world",
            "fullTitle": "Hello function should return hello world",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var result = hello_1.default();\nchai_1.expect(result).to.equal('Hello World!');",
            "err": {},
            "isRoot": false,
            "uuid": "d9160b2a-8d72-482b-91ff-dbcae68b8ea9",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "d9160b2a-8d72-482b-91ff-dbcae68b8ea9"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "afd3a664-4403-4cf7-b7c1-be9dd3208756",
        "title": "List<T>",
        "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/list/list.spec.ts",
        "file": "/src/list/list.spec.ts",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "f5e86751-db16-4706-895f-bf77a6576601",
            "title": "#getName()",
            "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/list/list.spec.ts",
            "file": "/src/list/list.spec.ts",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return name List<T>",
                "fullTitle": "List<T> #getName() should return name List<T>",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var list = new list_1.default();\nchai_1.expect(list.getName()).to.equal('List<T>');",
                "err": {},
                "isRoot": false,
                "uuid": "07cc195a-ceb7-4d11-94c0-2082d26ad9e3",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "07cc195a-ceb7-4d11-94c0-2082d26ad9e3"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "a2caabc8-1e70-4e71-87ae-317794f8433e",
            "title": "#add()",
            "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/list/list.spec.ts",
            "file": "/src/list/list.spec.ts",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "List<T> #add() \"before all\" hook",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "list = new list_1.default();",
                "err": {},
                "isRoot": false,
                "uuid": "505bea88-9334-4309-8356-66f4bcea032d",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 0 when 0 added at index 0",
                "fullTitle": "List<T> #add() should return 0 when 0 added at index 0",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.add(0, 0);\nchai_1.expect(list.get(0)).to.equal(0);",
                "err": {},
                "isRoot": false,
                "uuid": "fae57bd9-617f-4d87-bff7-c41bd5e296b8",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return 1 when 1 added at index 1",
                "fullTitle": "List<T> #add() should return 1 when 1 added at index 1",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.add(1, 1);\nchai_1.expect(list.get(1)).to.equal(1);",
                "err": {},
                "isRoot": false,
                "uuid": "f5d2ec76-7549-4258-8fcf-f5029d207acc",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return 10 when 10 added at index 10",
                "fullTitle": "List<T> #add() should return 10 when 10 added at index 10",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.add(10, 10);\nchai_1.expect(list.get(10)).to.equal(10);",
                "err": {},
                "isRoot": false,
                "uuid": "43ff7236-f64e-47c8-8b58-949ddd483764",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return 10 when 20 added at index 10 and get(11)",
                "fullTitle": "List<T> #add() should return 10 when 20 added at index 10 and get(11)",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.add(10, 20);\nchai_1.expect(list.get(11)).to.equal(10);",
                "err": {},
                "isRoot": false,
                "uuid": "ec63ce5e-b540-43a2-a324-317bb83bbe31",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return size 12 when size()",
                "fullTitle": "List<T> #add() should return size 12 when size()",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai_1.expect(list.size()).to.equal(12);",
                "err": {},
                "isRoot": false,
                "uuid": "31b1b52e-416b-4ac3-a064-711e62be9927",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should throw when get out of bound index",
                "fullTitle": "List<T> #add() should throw when get out of bound index",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai_1.expect(function () { return list.get(100); }).to.throw();",
                "err": {},
                "isRoot": false,
                "uuid": "9532876a-9167-4e7a-a77e-fc1f62324c13",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "fae57bd9-617f-4d87-bff7-c41bd5e296b8",
              "f5d2ec76-7549-4258-8fcf-f5029d207acc",
              "43ff7236-f64e-47c8-8b58-949ddd483764",
              "ec63ce5e-b540-43a2-a324-317bb83bbe31",
              "31b1b52e-416b-4ac3-a064-711e62be9927",
              "9532876a-9167-4e7a-a77e-fc1f62324c13"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "683e6ff1-f9f9-4840-8fd8-81973259b3f5",
            "title": "#remove()",
            "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/list/list.spec.ts",
            "file": "/src/list/list.spec.ts",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "List<T> #remove() \"before all\" hook",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "list = new list_1.default();\nlist.add(0, 'Aa');\nlist.add(1, 'Bb');\nlist.add(2, 'Cc');\nlist.add(3, 'Dd');\nlist.add(4, 'Ee');\nlist.add(5, 'Ff');\nlist.add(6, 'Gg');\nlist.add(7, 'Hh');\nlist.add(8, 'Ii');\nlist.add(9, 'Jj');",
                "err": {},
                "isRoot": false,
                "uuid": "41cc621d-d840-4d7c-8efd-39b0cd60c5fb",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "should size return 9 when remove index 9",
                "fullTitle": "List<T> #remove() should size return 9 when remove index 9",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.remove(9);\nchai_1.expect(list.size()).to.equal(9);\ndone();",
                "err": {},
                "isRoot": false,
                "uuid": "aaa11134-2cfb-4da8-bc98-39a9433d2448",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should size return 8 when remove index 8",
                "fullTitle": "List<T> #remove() should size return 8 when remove index 8",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.remove(8);\nchai_1.expect(list.size()).to.equal(8);\ndone();",
                "err": {},
                "isRoot": false,
                "uuid": "fb171ffd-9374-47bb-bb75-fc7f346dcb7b",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "aaa11134-2cfb-4da8-bc98-39a9433d2448",
              "fb171ffd-9374-47bb-bb75-fc7f346dcb7b"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "ff9ac342-fcee-48c3-914c-0eca177e676e",
            "title": "#isEmpty()",
            "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/list/list.spec.ts",
            "file": "/src/list/list.spec.ts",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "List<T> #isEmpty() \"before all\" hook",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "list = new list_1.default();\nlist.add(0, 'A');",
                "err": {},
                "isRoot": false,
                "uuid": "968f8b37-86de-4d4b-983c-43a0e94161ee",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return false when List has items",
                "fullTitle": "List<T> #isEmpty() should return false when List has items",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai_1.expect(list.isEmpty()).to.equal(false);",
                "err": {},
                "isRoot": false,
                "uuid": "8cc946d7-3a5c-4a46-9cfc-9b21ef42e7f9",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return true when List has no items",
                "fullTitle": "List<T> #isEmpty() should return true when List has no items",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.remove(0);\nchai_1.expect(list.isEmpty()).to.equal(true);",
                "err": {},
                "isRoot": false,
                "uuid": "b476f11e-5f3a-4a9d-bf40-e6fbf8c831fa",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "8cc946d7-3a5c-4a46-9cfc-9b21ef42e7f9",
              "b476f11e-5f3a-4a9d-bf40-e6fbf8c831fa"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "be3f8936-729f-4b40-9553-5efada616c42",
            "title": "#size()",
            "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/list/list.spec.ts",
            "file": "/src/list/list.spec.ts",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "List<T> #size() \"before all\" hook",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "list = new list_1.default();",
                "err": {},
                "isRoot": false,
                "uuid": "251495f7-894f-42c6-ab6a-773862fafc3b",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 0 when List is empty",
                "fullTitle": "List<T> #size() should return 0 when List is empty",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai_1.expect(list.size()).to.equal(0);\ndone();",
                "err": {},
                "isRoot": false,
                "uuid": "074fc971-3cdd-4e3e-ab58-cb9313723170",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return 10 when List has 10 items",
                "fullTitle": "List<T> #size() should return 10 when List has 10 items",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.add(0, 'a');\nlist.add(1, 'b');\nlist.add(2, 'c');\nlist.add(3, 'd');\nlist.add(4, 'e');\nlist.add(5, 'f');\nlist.add(6, 'g');\nlist.add(7, 'h');\nlist.add(8, 'i');\nlist.add(9, 'j');\nchai_1.expect(list.size()).to.equal(10);\ndone();",
                "err": {},
                "isRoot": false,
                "uuid": "40ea92d1-2fa0-4518-84b8-1fbe24321c85",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "074fc971-3cdd-4e3e-ab58-cb9313723170",
              "40ea92d1-2fa0-4518-84b8-1fbe24321c85"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "c8af1a3b-620a-4d1a-9bdc-a0149b92d924",
        "title": "Stack<T>",
        "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/stack/index.spec.ts",
        "file": "/src/stack/index.spec.ts",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "eea42e6b-8650-4186-8307-9e1a043f4732",
            "title": "#push()",
            "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/stack/index.spec.ts",
            "file": "/src/stack/index.spec.ts",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should peek return test when the test pushed",
                "fullTitle": "Stack<T> #push() should peek return test when the test pushed",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "myStack = new index_1.default();\nmyStack.push('test');\nchai_1.expect(myStack.peek()).equal('test');",
                "err": {},
                "isRoot": false,
                "uuid": "5787046c-2d97-4eae-bef9-c99c2537f9c9",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return 9 when the 10 elements pushed",
                "fullTitle": "Stack<T> #push() should return 9 when the 10 elements pushed",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "myStack = new index_1.default();\nfor (var index = 0; index < 10; index++) {\n    var elem = index;\n    myStack.push(elem);\n}\nchai_1.expect(myStack.peek()).equal(9);",
                "err": {},
                "isRoot": false,
                "uuid": "44d89daf-a520-426c-9578-ca8c452bea87",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "5787046c-2d97-4eae-bef9-c99c2537f9c9",
              "44d89daf-a520-426c-9578-ca8c452bea87"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "8ac301fb-02da-4ff2-905e-288f54033257",
            "title": "#pop()",
            "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/stack/index.spec.ts",
            "file": "/src/stack/index.spec.ts",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should throws Error [Stack overflow] when pop empty stack",
                "fullTitle": "Stack<T> #pop() should throws Error [Stack overflow] when pop empty stack",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "myStack = new index_1.default();\nchai_1.expect(myStack.pop).to.throw(Error);",
                "err": {},
                "isRoot": false,
                "uuid": "12e992ac-4900-4751-acbb-628336e364ab",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should pop return popTest when the popTest pushed",
                "fullTitle": "Stack<T> #pop() should pop return popTest when the popTest pushed",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "myStack = new index_1.default();\nmyStack.push('popTest');\nchai_1.expect(myStack.pop()).equal('popTest');",
                "err": {},
                "isRoot": false,
                "uuid": "a1c6ecf2-241e-4dac-a234-e6a28027ddb6",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "12e992ac-4900-4751-acbb-628336e364ab",
              "a1c6ecf2-241e-4dac-a234-e6a28027ddb6"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "0cecf5c7-1538-48cc-b406-654d8d336105",
            "title": "#isEmpty()",
            "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/stack/index.spec.ts",
            "file": "/src/stack/index.spec.ts",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return true when stack is empty",
                "fullTitle": "Stack<T> #isEmpty() should return true when stack is empty",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "myStack = new index_1.default();\nchai_1.expect(myStack.isEmpty()).equal(true);",
                "err": {},
                "isRoot": false,
                "uuid": "9652f2dc-56e0-48e8-9c4e-ffb67f7f3d5b",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return false when stack is not empty",
                "fullTitle": "Stack<T> #isEmpty() should return false when stack is not empty",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "myStack = new index_1.default();\nmyStack.push(0);\nchai_1.expect(myStack.isEmpty()).equal(false);",
                "err": {},
                "isRoot": false,
                "uuid": "2cc3ea17-9c11-4ee9-8d90-b78c22eb7cde",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "9652f2dc-56e0-48e8-9c4e-ffb67f7f3d5b",
              "2cc3ea17-9c11-4ee9-8d90-b78c22eb7cde"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "1d184bb2-78f5-492c-ad4c-2c9d5299e753",
            "title": "#size()",
            "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/stack/index.spec.ts",
            "file": "/src/stack/index.spec.ts",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 0 when stack is empty",
                "fullTitle": "Stack<T> #size() should return 0 when stack is empty",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "myStack = new index_1.default();\nchai_1.expect(myStack.size()).equal(0);",
                "err": {},
                "isRoot": false,
                "uuid": "c4887655-3992-4785-8a6e-a21f20f8d899",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return 1 when stack has one item",
                "fullTitle": "Stack<T> #size() should return 1 when stack has one item",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "myStack = new index_1.default();\nmyStack.push(0);\nchai_1.expect(myStack.size()).equal(1);",
                "err": {},
                "isRoot": false,
                "uuid": "8f3d7fa4-c7ad-454e-a625-c254373a8e2f",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "c4887655-3992-4785-8a6e-a21f20f8d899",
              "8f3d7fa4-c7ad-454e-a625-c254373a8e2f"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "10d9d18d-2c84-4779-9a18-031b1c24ca06",
            "title": "#clear()",
            "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/stack/index.spec.ts",
            "file": "/src/stack/index.spec.ts",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return true when stack called clear",
                "fullTitle": "Stack<T> #clear() should return true when stack called clear",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "myStack = new index_1.default();\nmyStack.push(0);\nmyStack.clear();\nchai_1.expect(myStack.isEmpty()).equal(true);",
                "err": {},
                "isRoot": false,
                "uuid": "72782068-a45b-4674-bf6a-7f9d84d8ddee",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return size 0 when stack called clear",
                "fullTitle": "Stack<T> #clear() should return size 0 when stack called clear",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "myStack = new index_1.default();\nmyStack.push(0);\nmyStack.clear();\nchai_1.expect(myStack.size()).equal(0);",
                "err": {},
                "isRoot": false,
                "uuid": "15098751-1bde-4f90-98ef-09e816851b34",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "72782068-a45b-4674-bf6a-7f9d84d8ddee",
              "15098751-1bde-4f90-98ef-09e816851b34"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2018
}