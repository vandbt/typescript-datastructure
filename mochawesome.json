{
  "stats": {
    "suites": 20,
    "tests": 40,
    "passes": 40,
    "pending": 0,
    "failures": 0,
    "start": "2018-05-17T01:37:33.799Z",
    "end": "2018-05-17T01:37:33.881Z",
    "duration": 82,
    "testsRegistered": 40,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "aa30e3c8-3293-4db2-b6b3-affb076bd82f",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "0d8875da-6926-4c70-8da3-1e0df35a47bf",
        "title": "DataStore<T>",
        "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/datastore/index.spec.ts",
        "file": "/src/datastore/index.spec.ts",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "3c7859fd-396c-4502-8619-2e108910517b",
            "title": "#getName()",
            "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/datastore/index.spec.ts",
            "file": "/src/datastore/index.spec.ts",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return name DataStore<T>",
                "fullTitle": "DataStore<T> #getName() should return name DataStore<T>",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var list = new index_1.default();\nchai_1.expect(list.getName()).to.equal('DataStore<T>');",
                "err": {},
                "isRoot": false,
                "uuid": "f2913cce-7daf-4186-9e66-c6ae8a88a9b0",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "f2913cce-7daf-4186-9e66-c6ae8a88a9b0"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "b831a8c2-11cb-4eaf-89dc-c6a3acb8c8ee",
            "title": "#add()",
            "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/datastore/index.spec.ts",
            "file": "/src/datastore/index.spec.ts",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "DataStore<T> #add() \"before all\" hook",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "list = new index_1.default();",
                "err": {},
                "isRoot": false,
                "uuid": "86b3f902-5b3d-4a19-8154-0211a020f7d3",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 0 when 0 added at index 0",
                "fullTitle": "DataStore<T> #add() should return 0 when 0 added at index 0",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.add(0);\nchai_1.expect(list.getElement(0)).to.equal(0);",
                "err": {},
                "isRoot": false,
                "uuid": "d5a6fa3b-88c5-4dca-9f0a-83846a47a1a7",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return 1 when 1 added at index 1",
                "fullTitle": "DataStore<T> #add() should return 1 when 1 added at index 1",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.add(1);\nchai_1.expect(list.getElement(1)).to.equal(1);",
                "err": {},
                "isRoot": false,
                "uuid": "61ad74d3-2643-409e-a6ae-301c331c1eb2",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should throw when get out of bound index",
                "fullTitle": "DataStore<T> #add() should throw when get out of bound index",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai_1.expect(function () { return list.getElement(100); }).to.throw();",
                "err": {},
                "isRoot": false,
                "uuid": "f228867f-1123-49fd-a08e-ad8d0094afdb",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "d5a6fa3b-88c5-4dca-9f0a-83846a47a1a7",
              "61ad74d3-2643-409e-a6ae-301c331c1eb2",
              "f228867f-1123-49fd-a08e-ad8d0094afdb"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "6caec7d3-86bf-4f5b-93a9-1a1e67f777c8",
            "title": "#insert()",
            "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/datastore/index.spec.ts",
            "file": "/src/datastore/index.spec.ts",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "DataStore<T> #insert() \"before all\" hook",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "list = new index_1.default();",
                "err": {},
                "isRoot": false,
                "uuid": "a1ffd7f4-65ff-4a2a-a2dd-432f5acfe654",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 0 when 0 inserted at index 0",
                "fullTitle": "DataStore<T> #insert() should return 0 when 0 inserted at index 0",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.insert(0, 0);\nchai_1.expect(list.getElement(0)).to.equal(0);",
                "err": {},
                "isRoot": false,
                "uuid": "bf848774-7b14-4a6a-b486-cfefeb7917b1",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return 1 when 1 inserted at index 1",
                "fullTitle": "DataStore<T> #insert() should return 1 when 1 inserted at index 1",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.insert(1, 1);\nchai_1.expect(list.getElement(1)).to.equal(1);",
                "err": {},
                "isRoot": false,
                "uuid": "5fbf206f-32df-4386-b684-ab1a9012a9ac",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return 10 when 10 inserted at index 10",
                "fullTitle": "DataStore<T> #insert() should return 10 when 10 inserted at index 10",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.insert(10, 10);\nchai_1.expect(list.getElement(10)).to.equal(10);",
                "err": {},
                "isRoot": false,
                "uuid": "7ae0e691-58fe-4747-a837-2dd8748826fc",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return 10 when 20 inserted at index 10 and getElement(11)",
                "fullTitle": "DataStore<T> #insert() should return 10 when 20 inserted at index 10 and getElement(11)",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.insert(10, 20);\nchai_1.expect(list.getElement(11)).to.equal(10);",
                "err": {},
                "isRoot": false,
                "uuid": "af12b2ef-302d-438b-9633-fe275057d116",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return length 12 when length()",
                "fullTitle": "DataStore<T> #insert() should return length 12 when length()",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "console.log(list.toString());\nchai_1.expect(list.length()).to.equal(12);",
                "err": {},
                "isRoot": false,
                "uuid": "f3c745d4-30f0-4a69-beaf-5954232a84c0",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should throw when get out of bound index",
                "fullTitle": "DataStore<T> #insert() should throw when get out of bound index",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai_1.expect(function () { return list.getElement(100); }).to.throw();",
                "err": {},
                "isRoot": false,
                "uuid": "04c296e0-cfec-465b-b116-79ba6bdb0c88",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "bf848774-7b14-4a6a-b486-cfefeb7917b1",
              "5fbf206f-32df-4386-b684-ab1a9012a9ac",
              "7ae0e691-58fe-4747-a837-2dd8748826fc",
              "af12b2ef-302d-438b-9633-fe275057d116",
              "f3c745d4-30f0-4a69-beaf-5954232a84c0",
              "04c296e0-cfec-465b-b116-79ba6bdb0c88"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "95dfa507-c4ff-446c-bb7d-90239f6abd93",
            "title": "#remove()",
            "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/datastore/index.spec.ts",
            "file": "/src/datastore/index.spec.ts",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "DataStore<T> #remove() \"before all\" hook",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "list = new index_1.default();\nlist.add(0, 'Aa');\nlist.add(1, 'Bb');\nlist.add(2, 'Cc');\nlist.add(3, 'Dd');\nlist.add(4, 'Ee');\nlist.add(5, 'Ff');\nlist.add(6, 'Gg');\nlist.add(7, 'Hh');\nlist.add(8, 'Ii');\nlist.add(9, 'Jj');",
                "err": {},
                "isRoot": false,
                "uuid": "eb144567-bc3f-4f99-af65-b88577f1fa9c",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "should length return 9 when remove index 9",
                "fullTitle": "DataStore<T> #remove() should length return 9 when remove index 9",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.remove(9);\nchai_1.expect(list.length()).to.equal(9);\ndone();",
                "err": {},
                "isRoot": false,
                "uuid": "212247bc-2839-4e9a-a12c-055190bde24a",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should length return 8 when remove index 8",
                "fullTitle": "DataStore<T> #remove() should length return 8 when remove index 8",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.remove(8);\nchai_1.expect(list.length()).to.equal(8);\ndone();",
                "err": {},
                "isRoot": false,
                "uuid": "bb370646-205c-43b4-b3ff-c2acd9399711",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "212247bc-2839-4e9a-a12c-055190bde24a",
              "bb370646-205c-43b4-b3ff-c2acd9399711"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "3388ebbe-cda6-49c6-af7e-8bef394ec4b5",
            "title": "#isEmpty()",
            "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/datastore/index.spec.ts",
            "file": "/src/datastore/index.spec.ts",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "DataStore<T> #isEmpty() \"before all\" hook",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "list = new index_1.default();\nlist.add(0, 'A');",
                "err": {},
                "isRoot": false,
                "uuid": "1f7ce4c5-55c7-4d52-a687-b781a8e09b9e",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return false when List has items",
                "fullTitle": "DataStore<T> #isEmpty() should return false when List has items",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai_1.expect(list.isEmpty()).to.equal(false);",
                "err": {},
                "isRoot": false,
                "uuid": "21a87dbb-8f57-4e3d-ae14-4f1b84b13abe",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return true when List has no items",
                "fullTitle": "DataStore<T> #isEmpty() should return true when List has no items",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.remove(0);\nchai_1.expect(list.isEmpty()).to.equal(true);",
                "err": {},
                "isRoot": false,
                "uuid": "97c137da-3bee-41ff-bc47-9ce8a1ac646e",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "21a87dbb-8f57-4e3d-ae14-4f1b84b13abe",
              "97c137da-3bee-41ff-bc47-9ce8a1ac646e"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "8b40382d-065d-454e-9be5-4803b7e933eb",
            "title": "#length()",
            "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/datastore/index.spec.ts",
            "file": "/src/datastore/index.spec.ts",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "DataStore<T> #length() \"before all\" hook",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "list = new index_1.default();",
                "err": {},
                "isRoot": false,
                "uuid": "b455879b-6912-4ff7-b17d-cadafcc1593b",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 0 when List is empty",
                "fullTitle": "DataStore<T> #length() should return 0 when List is empty",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai_1.expect(list.length()).to.equal(0);\ndone();",
                "err": {},
                "isRoot": false,
                "uuid": "a32d3456-2ad1-45b9-b062-b83ec3d22685",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return 10 when List has 10 items",
                "fullTitle": "DataStore<T> #length() should return 10 when List has 10 items",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.add(0, 'a');\nlist.add(1, 'b');\nlist.add(2, 'c');\nlist.add(3, 'd');\nlist.add(4, 'e');\nlist.add(5, 'f');\nlist.add(6, 'g');\nlist.add(7, 'h');\nlist.add(8, 'i');\nlist.add(9, 'j');\nchai_1.expect(list.length()).to.equal(10);\ndone();",
                "err": {},
                "isRoot": false,
                "uuid": "e1564813-3754-4a58-a463-a84d3c77322c",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "a32d3456-2ad1-45b9-b062-b83ec3d22685",
              "e1564813-3754-4a58-a463-a84d3c77322c"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "4d88f10e-8f86-4b5a-a2c8-791b7117927d",
        "title": "Hello function",
        "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/hello/hello.spec.ts",
        "file": "/src/hello/hello.spec.ts",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return hello world",
            "fullTitle": "Hello function should return hello world",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var result = hello_1.default();\nchai_1.expect(result).to.equal('Hello World!');",
            "err": {},
            "isRoot": false,
            "uuid": "da3b7542-d62f-4819-b709-c26c0224a844",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "da3b7542-d62f-4819-b709-c26c0224a844"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 1,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "9984ff56-231f-471a-bfe5-f4825f6cd159",
        "title": "List<T>",
        "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/list/list.spec.ts",
        "file": "/src/list/list.spec.ts",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "b1a6afb2-93dc-44a0-aff9-a10b6fa36c67",
            "title": "#getName()",
            "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/list/list.spec.ts",
            "file": "/src/list/list.spec.ts",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return name List<T>",
                "fullTitle": "List<T> #getName() should return name List<T>",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var list = new list_1.default();\nchai_1.expect(list.getName()).to.equal('List<T>');",
                "err": {},
                "isRoot": false,
                "uuid": "97a8226c-7b33-4113-8920-41038065bb2d",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "97a8226c-7b33-4113-8920-41038065bb2d"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "7c19b683-22a5-4f11-87a0-b22e6af70d19",
            "title": "#add()",
            "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/list/list.spec.ts",
            "file": "/src/list/list.spec.ts",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "List<T> #add() \"before all\" hook",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "list = new list_1.default();",
                "err": {},
                "isRoot": false,
                "uuid": "c5bd3fef-e480-4f2d-92f8-a8ba07e9a073",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 0 when 0 added at index 0",
                "fullTitle": "List<T> #add() should return 0 when 0 added at index 0",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.add(0, 0);\nchai_1.expect(list.get(0)).to.equal(0);",
                "err": {},
                "isRoot": false,
                "uuid": "418bd949-003e-4408-b198-659358f86b89",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return 1 when 1 added at index 1",
                "fullTitle": "List<T> #add() should return 1 when 1 added at index 1",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.add(1, 1);\nchai_1.expect(list.get(1)).to.equal(1);",
                "err": {},
                "isRoot": false,
                "uuid": "12ac8dd5-be40-4bf6-9e18-91594ff24979",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return 10 when 10 added at index 10",
                "fullTitle": "List<T> #add() should return 10 when 10 added at index 10",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.add(10, 10);\nchai_1.expect(list.get(10)).to.equal(10);",
                "err": {},
                "isRoot": false,
                "uuid": "e326f7a9-a7f5-4c18-9cbc-e80202011637",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return 10 when 20 added at index 10 and get(11)",
                "fullTitle": "List<T> #add() should return 10 when 20 added at index 10 and get(11)",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.add(10, 20);\nchai_1.expect(list.get(11)).to.equal(10);",
                "err": {},
                "isRoot": false,
                "uuid": "1b55bed6-4050-4bc5-89d0-2e4fefadc580",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return size 12 when size()",
                "fullTitle": "List<T> #add() should return size 12 when size()",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai_1.expect(list.size()).to.equal(12);",
                "err": {},
                "isRoot": false,
                "uuid": "fa8bb57a-fd5f-4f23-ab1a-c71b2185955b",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should throw when get out of bound index",
                "fullTitle": "List<T> #add() should throw when get out of bound index",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai_1.expect(function () { return list.get(100); }).to.throw();",
                "err": {},
                "isRoot": false,
                "uuid": "32969575-cda7-4d12-bed6-76a19d2c0bcc",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "418bd949-003e-4408-b198-659358f86b89",
              "12ac8dd5-be40-4bf6-9e18-91594ff24979",
              "e326f7a9-a7f5-4c18-9cbc-e80202011637",
              "1b55bed6-4050-4bc5-89d0-2e4fefadc580",
              "fa8bb57a-fd5f-4f23-ab1a-c71b2185955b",
              "32969575-cda7-4d12-bed6-76a19d2c0bcc"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "3e779366-0707-441b-a2dc-1db7d29b8b08",
            "title": "#remove()",
            "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/list/list.spec.ts",
            "file": "/src/list/list.spec.ts",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "List<T> #remove() \"before all\" hook",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "list = new list_1.default();\nlist.add(0, 'Aa');\nlist.add(1, 'Bb');\nlist.add(2, 'Cc');\nlist.add(3, 'Dd');\nlist.add(4, 'Ee');\nlist.add(5, 'Ff');\nlist.add(6, 'Gg');\nlist.add(7, 'Hh');\nlist.add(8, 'Ii');\nlist.add(9, 'Jj');",
                "err": {},
                "isRoot": false,
                "uuid": "805329ed-1fad-4f44-a8c9-5cd478822a7c",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "should size return 9 when remove index 9",
                "fullTitle": "List<T> #remove() should size return 9 when remove index 9",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.remove(9);\nchai_1.expect(list.size()).to.equal(9);\ndone();",
                "err": {},
                "isRoot": false,
                "uuid": "215f1f9b-2aae-40d6-a7d8-dac1654a8693",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should size return 8 when remove index 8",
                "fullTitle": "List<T> #remove() should size return 8 when remove index 8",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.remove(8);\nchai_1.expect(list.size()).to.equal(8);\ndone();",
                "err": {},
                "isRoot": false,
                "uuid": "d0e8dcba-fc2b-4404-87cf-13a8e9361244",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "215f1f9b-2aae-40d6-a7d8-dac1654a8693",
              "d0e8dcba-fc2b-4404-87cf-13a8e9361244"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "dfa1acbc-4f64-4fbd-a4ff-c02423af3469",
            "title": "#isEmpty()",
            "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/list/list.spec.ts",
            "file": "/src/list/list.spec.ts",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "List<T> #isEmpty() \"before all\" hook",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "list = new list_1.default();\nlist.add(0, 'A');",
                "err": {},
                "isRoot": false,
                "uuid": "84584206-45b8-438e-a474-ac0e2a5a3306",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return false when List has items",
                "fullTitle": "List<T> #isEmpty() should return false when List has items",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai_1.expect(list.isEmpty()).to.equal(false);",
                "err": {},
                "isRoot": false,
                "uuid": "020196d8-bf38-4fcd-ac63-d38d7eda98c6",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return true when List has no items",
                "fullTitle": "List<T> #isEmpty() should return true when List has no items",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.remove(0);\nchai_1.expect(list.isEmpty()).to.equal(true);",
                "err": {},
                "isRoot": false,
                "uuid": "ec4ee551-34a6-42c5-bd0d-be2877930db7",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "020196d8-bf38-4fcd-ac63-d38d7eda98c6",
              "ec4ee551-34a6-42c5-bd0d-be2877930db7"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "a341678f-1acc-43f4-a6fd-ff732e9d9f50",
            "title": "#size()",
            "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/list/list.spec.ts",
            "file": "/src/list/list.spec.ts",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "List<T> #size() \"before all\" hook",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "list = new list_1.default();",
                "err": {},
                "isRoot": false,
                "uuid": "7becf773-e587-4bc1-b2e0-0e2deb5f2188",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 0 when List is empty",
                "fullTitle": "List<T> #size() should return 0 when List is empty",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai_1.expect(list.size()).to.equal(0);\ndone();",
                "err": {},
                "isRoot": false,
                "uuid": "3dd8f2aa-f1d1-4ccd-a97a-b8fde1f3b488",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return 10 when List has 10 items",
                "fullTitle": "List<T> #size() should return 10 when List has 10 items",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.add(0, 'a');\nlist.add(1, 'b');\nlist.add(2, 'c');\nlist.add(3, 'd');\nlist.add(4, 'e');\nlist.add(5, 'f');\nlist.add(6, 'g');\nlist.add(7, 'h');\nlist.add(8, 'i');\nlist.add(9, 'j');\nchai_1.expect(list.size()).to.equal(10);\ndone();",
                "err": {},
                "isRoot": false,
                "uuid": "0825ee48-b804-4a2b-8857-10af242409b4",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "3dd8f2aa-f1d1-4ccd-a97a-b8fde1f3b488",
              "0825ee48-b804-4a2b-8857-10af242409b4"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "eed1dd70-707e-4c4d-817b-b75adebc6ea2",
        "title": "Stack<T>",
        "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/stack/index.spec.ts",
        "file": "/src/stack/index.spec.ts",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "7c475c94-1e88-457e-a042-c9dd78dc2667",
            "title": "#push()",
            "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/stack/index.spec.ts",
            "file": "/src/stack/index.spec.ts",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should peek return test when the test pushed",
                "fullTitle": "Stack<T> #push() should peek return test when the test pushed",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "myStack = new index_1.default();\nmyStack.push('test');\nchai_1.expect(myStack.peek()).equal('test');",
                "err": {},
                "isRoot": false,
                "uuid": "e17a5688-3f4b-4bb5-b35e-85acef1ee756",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return 9 when the 10 elements pushed",
                "fullTitle": "Stack<T> #push() should return 9 when the 10 elements pushed",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "myStack = new index_1.default();\nfor (var index = 0; index < 10; index++) {\n    var elem = index;\n    myStack.push(elem);\n}\nchai_1.expect(myStack.peek()).equal(9);",
                "err": {},
                "isRoot": false,
                "uuid": "6547595a-ada9-480b-95e5-3f6ad4def87b",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "e17a5688-3f4b-4bb5-b35e-85acef1ee756",
              "6547595a-ada9-480b-95e5-3f6ad4def87b"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "bbd10d6b-6269-4593-b402-f8968f5e3087",
            "title": "#pop()",
            "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/stack/index.spec.ts",
            "file": "/src/stack/index.spec.ts",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should throws Error [Stack overflow] when pop empty stack",
                "fullTitle": "Stack<T> #pop() should throws Error [Stack overflow] when pop empty stack",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "myStack = new index_1.default();\nchai_1.expect(myStack.pop).to.throw(Error);",
                "err": {},
                "isRoot": false,
                "uuid": "ec2876f2-d9bb-41b6-8905-09e86d0f3ae9",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should pop return popTest when the popTest pushed",
                "fullTitle": "Stack<T> #pop() should pop return popTest when the popTest pushed",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "myStack = new index_1.default();\nmyStack.push('popTest');\nchai_1.expect(myStack.pop()).equal('popTest');",
                "err": {},
                "isRoot": false,
                "uuid": "3e0f8285-5c90-44e1-9932-2ee639c24dde",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "ec2876f2-d9bb-41b6-8905-09e86d0f3ae9",
              "3e0f8285-5c90-44e1-9932-2ee639c24dde"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "70094198-14ab-4aff-9741-2646efad9ee1",
            "title": "#isEmpty()",
            "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/stack/index.spec.ts",
            "file": "/src/stack/index.spec.ts",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return true when stack is empty",
                "fullTitle": "Stack<T> #isEmpty() should return true when stack is empty",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "myStack = new index_1.default();\nchai_1.expect(myStack.isEmpty()).equal(true);",
                "err": {},
                "isRoot": false,
                "uuid": "19bf6daf-989e-4a9d-b2a6-aac3e0c81830",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return false when stack is not empty",
                "fullTitle": "Stack<T> #isEmpty() should return false when stack is not empty",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "myStack = new index_1.default();\nmyStack.push(0);\nchai_1.expect(myStack.isEmpty()).equal(false);",
                "err": {},
                "isRoot": false,
                "uuid": "404f9216-b3a1-4f76-a233-e0436440fae2",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "19bf6daf-989e-4a9d-b2a6-aac3e0c81830",
              "404f9216-b3a1-4f76-a233-e0436440fae2"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "dc760ccf-d1b0-428c-8a3a-e9a85ed81fd1",
            "title": "#size()",
            "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/stack/index.spec.ts",
            "file": "/src/stack/index.spec.ts",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 0 when stack is empty",
                "fullTitle": "Stack<T> #size() should return 0 when stack is empty",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "myStack = new index_1.default();\nchai_1.expect(myStack.size()).equal(0);",
                "err": {},
                "isRoot": false,
                "uuid": "8969dec4-a173-45c8-86b8-e3c2c525195b",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return 1 when stack has one item",
                "fullTitle": "Stack<T> #size() should return 1 when stack has one item",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "myStack = new index_1.default();\nmyStack.push(0);\nchai_1.expect(myStack.size()).equal(1);",
                "err": {},
                "isRoot": false,
                "uuid": "7d47398c-22a9-423d-96ea-259d8cc6bbfb",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "8969dec4-a173-45c8-86b8-e3c2c525195b",
              "7d47398c-22a9-423d-96ea-259d8cc6bbfb"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "8afba9f2-6b89-4a48-80c4-11a94797f19b",
            "title": "#clear()",
            "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/stack/index.spec.ts",
            "file": "/src/stack/index.spec.ts",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return true when stack called clear",
                "fullTitle": "Stack<T> #clear() should return true when stack called clear",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "myStack = new index_1.default();\nmyStack.push(0);\nmyStack.clear();\nchai_1.expect(myStack.isEmpty()).equal(true);",
                "err": {},
                "isRoot": false,
                "uuid": "7a7bed43-a840-4a83-9785-778c52530856",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return size 0 when stack called clear",
                "fullTitle": "Stack<T> #clear() should return size 0 when stack called clear",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "myStack = new index_1.default();\nmyStack.push(0);\nmyStack.clear();\nchai_1.expect(myStack.size()).equal(0);",
                "err": {},
                "isRoot": false,
                "uuid": "bdf412d3-d4ae-47f3-9d12-9723cbbaa52c",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "7a7bed43-a840-4a83-9785-778c52530856",
              "bdf412d3-d4ae-47f3-9d12-9723cbbaa52c"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2018
}