{
  "stats": {
    "suites": 20,
    "tests": 40,
    "passes": 40,
    "pending": 0,
    "failures": 0,
    "start": "2018-05-17T01:43:48.418Z",
    "end": "2018-05-17T01:43:48.496Z",
    "duration": 78,
    "testsRegistered": 40,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "500c5f2b-b29e-41e0-8e85-df9c5432c1e6",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "ddc9f845-1bc4-4513-96a3-ab7158c812fb",
        "title": "DataStore<T>",
        "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/datastore/index.spec.ts",
        "file": "/src/datastore/index.spec.ts",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "28c469c1-93b4-4f77-aa28-fb7268d3b9c6",
            "title": "#getName()",
            "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/datastore/index.spec.ts",
            "file": "/src/datastore/index.spec.ts",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return name DataStore<T>",
                "fullTitle": "DataStore<T> #getName() should return name DataStore<T>",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var list = new index_1.default();\nchai_1.expect(list.getName()).to.equal('DataStore<T>');",
                "err": {},
                "isRoot": false,
                "uuid": "a8966b45-ae8a-403a-a007-663d6c5eaaa0",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "a8966b45-ae8a-403a-a007-663d6c5eaaa0"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "0d9b49da-e18d-4d79-b734-2203831b6e81",
            "title": "#add()",
            "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/datastore/index.spec.ts",
            "file": "/src/datastore/index.spec.ts",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "DataStore<T> #add() \"before all\" hook",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "list = new index_1.default();",
                "err": {},
                "isRoot": false,
                "uuid": "fb6a83d5-29ba-4050-9c84-72e8a59afa67",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 0 when 0 added at index 0",
                "fullTitle": "DataStore<T> #add() should return 0 when 0 added at index 0",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.add(0);\nchai_1.expect(list.getElement(0)).to.equal(0);",
                "err": {},
                "isRoot": false,
                "uuid": "dd0db373-3b08-4875-bb12-364c90246f98",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return 1 when 1 added at index 1",
                "fullTitle": "DataStore<T> #add() should return 1 when 1 added at index 1",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.add(1);\nchai_1.expect(list.getElement(1)).to.equal(1);",
                "err": {},
                "isRoot": false,
                "uuid": "798fa0df-a9b3-4cab-bcd7-9e6025483e93",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should throw when get out of bound index",
                "fullTitle": "DataStore<T> #add() should throw when get out of bound index",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai_1.expect(function () { return list.getElement(100); }).to.throw();",
                "err": {},
                "isRoot": false,
                "uuid": "9aee32ad-26d4-403f-8b62-89e570bcab15",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "dd0db373-3b08-4875-bb12-364c90246f98",
              "798fa0df-a9b3-4cab-bcd7-9e6025483e93",
              "9aee32ad-26d4-403f-8b62-89e570bcab15"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "0cb9b7f8-4c86-444e-9d05-4dfd149bd636",
            "title": "#insert()",
            "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/datastore/index.spec.ts",
            "file": "/src/datastore/index.spec.ts",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "DataStore<T> #insert() \"before all\" hook",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "list = new index_1.default();",
                "err": {},
                "isRoot": false,
                "uuid": "1e107910-2110-4775-9e23-dc5c6a2c7b74",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 0 when 0 inserted at index 0",
                "fullTitle": "DataStore<T> #insert() should return 0 when 0 inserted at index 0",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.insert(0, 0);\nchai_1.expect(list.getElement(0)).to.equal(0);",
                "err": {},
                "isRoot": false,
                "uuid": "a452f0c3-9842-4d29-9311-9f8fa43500c8",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return 1 when 1 inserted at index 1",
                "fullTitle": "DataStore<T> #insert() should return 1 when 1 inserted at index 1",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.insert(1, 1);\nchai_1.expect(list.getElement(1)).to.equal(1);",
                "err": {},
                "isRoot": false,
                "uuid": "19f9d281-f8a0-400a-b633-02a0d1aa8d77",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return 10 when 10 inserted at index 10",
                "fullTitle": "DataStore<T> #insert() should return 10 when 10 inserted at index 10",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.insert(10, 10);\nchai_1.expect(list.getElement(10)).to.equal(10);",
                "err": {},
                "isRoot": false,
                "uuid": "7c8fc249-5559-4917-819d-c125ba942e05",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return 10 when 20 inserted at index 10 and getElement(11)",
                "fullTitle": "DataStore<T> #insert() should return 10 when 20 inserted at index 10 and getElement(11)",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.insert(10, 20);\nchai_1.expect(list.getElement(11)).to.equal(10);",
                "err": {},
                "isRoot": false,
                "uuid": "9f09c23d-2c13-4af5-9f87-a6d933ae69bf",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return length 12 when length()",
                "fullTitle": "DataStore<T> #insert() should return length 12 when length()",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "console.log(list.toString());\nchai_1.expect(list.length()).to.equal(12);",
                "err": {},
                "isRoot": false,
                "uuid": "53f3cf8a-dd5c-401b-93b2-61e3b43f4a3a",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should throw when get out of bound index",
                "fullTitle": "DataStore<T> #insert() should throw when get out of bound index",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai_1.expect(function () { return list.getElement(100); }).to.throw();",
                "err": {},
                "isRoot": false,
                "uuid": "54eb816f-47c6-4e48-abbb-3717c2d818c4",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "a452f0c3-9842-4d29-9311-9f8fa43500c8",
              "19f9d281-f8a0-400a-b633-02a0d1aa8d77",
              "7c8fc249-5559-4917-819d-c125ba942e05",
              "9f09c23d-2c13-4af5-9f87-a6d933ae69bf",
              "53f3cf8a-dd5c-401b-93b2-61e3b43f4a3a",
              "54eb816f-47c6-4e48-abbb-3717c2d818c4"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "82c79f2b-6987-4c61-91e8-26bf7b1cf08f",
            "title": "#remove()",
            "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/datastore/index.spec.ts",
            "file": "/src/datastore/index.spec.ts",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "DataStore<T> #remove() \"before all\" hook",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "list = new index_1.default();\nlist.add(0, 'Aa');\nlist.add(1, 'Bb');\nlist.add(2, 'Cc');\nlist.add(3, 'Dd');\nlist.add(4, 'Ee');\nlist.add(5, 'Ff');\nlist.add(6, 'Gg');\nlist.add(7, 'Hh');\nlist.add(8, 'Ii');\nlist.add(9, 'Jj');",
                "err": {},
                "isRoot": false,
                "uuid": "df136616-fb01-4f2a-bc01-92706427e6c3",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "should length return 9 when remove index 9",
                "fullTitle": "DataStore<T> #remove() should length return 9 when remove index 9",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.remove(9);\nchai_1.expect(list.length()).to.equal(9);\ndone();",
                "err": {},
                "isRoot": false,
                "uuid": "d7ad20d5-088a-4441-b8f0-1938fd90f41c",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should length return 8 when remove index 8",
                "fullTitle": "DataStore<T> #remove() should length return 8 when remove index 8",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.remove(8);\nchai_1.expect(list.length()).to.equal(8);\ndone();",
                "err": {},
                "isRoot": false,
                "uuid": "1385b8d6-b8b8-4e71-bc91-a0c07b613dae",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "d7ad20d5-088a-4441-b8f0-1938fd90f41c",
              "1385b8d6-b8b8-4e71-bc91-a0c07b613dae"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "a3321965-095a-4db7-8bf7-66be7a285d35",
            "title": "#isEmpty()",
            "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/datastore/index.spec.ts",
            "file": "/src/datastore/index.spec.ts",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "DataStore<T> #isEmpty() \"before all\" hook",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "list = new index_1.default();\nlist.add(0, 'A');",
                "err": {},
                "isRoot": false,
                "uuid": "c3667913-3baa-496b-943b-7d84ca41df71",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return false when List has items",
                "fullTitle": "DataStore<T> #isEmpty() should return false when List has items",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai_1.expect(list.isEmpty()).to.equal(false);",
                "err": {},
                "isRoot": false,
                "uuid": "c8062c48-6e6b-4790-9147-05ea8ebe6c46",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return true when List has no items",
                "fullTitle": "DataStore<T> #isEmpty() should return true when List has no items",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.remove(0);\nchai_1.expect(list.isEmpty()).to.equal(true);",
                "err": {},
                "isRoot": false,
                "uuid": "f183667a-3c7c-4e8d-b9cc-93a1047383e7",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "c8062c48-6e6b-4790-9147-05ea8ebe6c46",
              "f183667a-3c7c-4e8d-b9cc-93a1047383e7"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "bb948228-ad87-4253-ada0-94ff1e96577f",
            "title": "#length()",
            "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/datastore/index.spec.ts",
            "file": "/src/datastore/index.spec.ts",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "DataStore<T> #length() \"before all\" hook",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "list = new index_1.default();",
                "err": {},
                "isRoot": false,
                "uuid": "c3b9947d-9777-40db-bbdc-4f334d1383ea",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 0 when List is empty",
                "fullTitle": "DataStore<T> #length() should return 0 when List is empty",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai_1.expect(list.length()).to.equal(0);\ndone();",
                "err": {},
                "isRoot": false,
                "uuid": "62bad638-e672-4172-9664-d6eff51f3b47",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return 10 when List has 10 items",
                "fullTitle": "DataStore<T> #length() should return 10 when List has 10 items",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.add(0, 'a');\nlist.add(1, 'b');\nlist.add(2, 'c');\nlist.add(3, 'd');\nlist.add(4, 'e');\nlist.add(5, 'f');\nlist.add(6, 'g');\nlist.add(7, 'h');\nlist.add(8, 'i');\nlist.add(9, 'j');\nchai_1.expect(list.length()).to.equal(10);\ndone();",
                "err": {},
                "isRoot": false,
                "uuid": "0d4d4af6-c269-4da0-854a-66ef50974f02",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "62bad638-e672-4172-9664-d6eff51f3b47",
              "0d4d4af6-c269-4da0-854a-66ef50974f02"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "305a3e10-d147-4794-b40d-881c38a05948",
        "title": "Hello function",
        "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/hello/hello.spec.ts",
        "file": "/src/hello/hello.spec.ts",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return hello world",
            "fullTitle": "Hello function should return hello world",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var result = hello_1.default();\nchai_1.expect(result).to.equal('Hello World!');",
            "err": {},
            "isRoot": false,
            "uuid": "c9fd2f5d-7fd1-430c-987b-66362fd6287f",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "c9fd2f5d-7fd1-430c-987b-66362fd6287f"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "2bd732ee-b4f5-4803-a590-11a73b35a271",
        "title": "List<T>",
        "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/list/list.spec.ts",
        "file": "/src/list/list.spec.ts",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "90ba7290-df86-4dab-9689-cde5dec0882a",
            "title": "#getName()",
            "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/list/list.spec.ts",
            "file": "/src/list/list.spec.ts",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return name List<T>",
                "fullTitle": "List<T> #getName() should return name List<T>",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var list = new list_1.default();\nchai_1.expect(list.getName()).to.equal('List<T>');",
                "err": {},
                "isRoot": false,
                "uuid": "c69f530c-75e9-4552-b1a7-abd5b891c39d",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "c69f530c-75e9-4552-b1a7-abd5b891c39d"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "eb4437dc-d8f4-4a82-97f2-9ff8e8e11a45",
            "title": "#add()",
            "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/list/list.spec.ts",
            "file": "/src/list/list.spec.ts",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "List<T> #add() \"before all\" hook",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "list = new list_1.default();",
                "err": {},
                "isRoot": false,
                "uuid": "9fcc7037-9742-4df4-9517-1ed78286efe7",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 0 when 0 added at index 0",
                "fullTitle": "List<T> #add() should return 0 when 0 added at index 0",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.add(0, 0);\nchai_1.expect(list.get(0)).to.equal(0);",
                "err": {},
                "isRoot": false,
                "uuid": "f2a18539-3233-4356-aa46-5dba5d5bb8a8",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return 1 when 1 added at index 1",
                "fullTitle": "List<T> #add() should return 1 when 1 added at index 1",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.add(1, 1);\nchai_1.expect(list.get(1)).to.equal(1);",
                "err": {},
                "isRoot": false,
                "uuid": "2548bcf0-60ed-4ea6-9896-96924a32bbfb",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return 10 when 10 added at index 10",
                "fullTitle": "List<T> #add() should return 10 when 10 added at index 10",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.add(10, 10);\nchai_1.expect(list.get(10)).to.equal(10);",
                "err": {},
                "isRoot": false,
                "uuid": "6938c044-68ab-4e78-9e4d-a1c5eecbb6b9",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return 10 when 20 added at index 10 and get(11)",
                "fullTitle": "List<T> #add() should return 10 when 20 added at index 10 and get(11)",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.add(10, 20);\nchai_1.expect(list.get(11)).to.equal(10);",
                "err": {},
                "isRoot": false,
                "uuid": "3c3e596a-aff9-4c38-9e4c-faaea108be20",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return size 12 when size()",
                "fullTitle": "List<T> #add() should return size 12 when size()",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai_1.expect(list.size()).to.equal(12);",
                "err": {},
                "isRoot": false,
                "uuid": "d2f00aaa-f256-4a48-b813-bde292218fee",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should throw when get out of bound index",
                "fullTitle": "List<T> #add() should throw when get out of bound index",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai_1.expect(function () { return list.get(100); }).to.throw();",
                "err": {},
                "isRoot": false,
                "uuid": "70ed5866-1921-40f6-acae-8ecc88daddaa",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "f2a18539-3233-4356-aa46-5dba5d5bb8a8",
              "2548bcf0-60ed-4ea6-9896-96924a32bbfb",
              "6938c044-68ab-4e78-9e4d-a1c5eecbb6b9",
              "3c3e596a-aff9-4c38-9e4c-faaea108be20",
              "d2f00aaa-f256-4a48-b813-bde292218fee",
              "70ed5866-1921-40f6-acae-8ecc88daddaa"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "39bafc5a-4076-4d5b-b242-cf056a2de024",
            "title": "#remove()",
            "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/list/list.spec.ts",
            "file": "/src/list/list.spec.ts",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "List<T> #remove() \"before all\" hook",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "list = new list_1.default();\nlist.add(0, 'Aa');\nlist.add(1, 'Bb');\nlist.add(2, 'Cc');\nlist.add(3, 'Dd');\nlist.add(4, 'Ee');\nlist.add(5, 'Ff');\nlist.add(6, 'Gg');\nlist.add(7, 'Hh');\nlist.add(8, 'Ii');\nlist.add(9, 'Jj');",
                "err": {},
                "isRoot": false,
                "uuid": "612b2462-e15e-40ca-b34e-4f56788072a1",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "should size return 9 when remove index 9",
                "fullTitle": "List<T> #remove() should size return 9 when remove index 9",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.remove(9);\nchai_1.expect(list.size()).to.equal(9);\ndone();",
                "err": {},
                "isRoot": false,
                "uuid": "04af044f-bc2b-4764-a342-0fa4b337743e",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should size return 8 when remove index 8",
                "fullTitle": "List<T> #remove() should size return 8 when remove index 8",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.remove(8);\nchai_1.expect(list.size()).to.equal(8);\ndone();",
                "err": {},
                "isRoot": false,
                "uuid": "e8744eb4-f8bd-46f9-b2a5-80587c26c2c6",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "04af044f-bc2b-4764-a342-0fa4b337743e",
              "e8744eb4-f8bd-46f9-b2a5-80587c26c2c6"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "c79575f0-bfbd-40d0-9ac3-12984108472e",
            "title": "#isEmpty()",
            "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/list/list.spec.ts",
            "file": "/src/list/list.spec.ts",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "List<T> #isEmpty() \"before all\" hook",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "list = new list_1.default();\nlist.add(0, 'A');",
                "err": {},
                "isRoot": false,
                "uuid": "938abeac-d61b-4ce7-987b-fd797f47bcd5",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return false when List has items",
                "fullTitle": "List<T> #isEmpty() should return false when List has items",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai_1.expect(list.isEmpty()).to.equal(false);",
                "err": {},
                "isRoot": false,
                "uuid": "7f8369d5-022d-445e-9d3b-924d4c8c6dfa",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return true when List has no items",
                "fullTitle": "List<T> #isEmpty() should return true when List has no items",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.remove(0);\nchai_1.expect(list.isEmpty()).to.equal(true);",
                "err": {},
                "isRoot": false,
                "uuid": "ea112293-803f-4e6b-83cf-22f60c8805ca",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "7f8369d5-022d-445e-9d3b-924d4c8c6dfa",
              "ea112293-803f-4e6b-83cf-22f60c8805ca"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "647b8bc6-5287-4f35-8a42-54c441ead679",
            "title": "#size()",
            "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/list/list.spec.ts",
            "file": "/src/list/list.spec.ts",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "List<T> #size() \"before all\" hook",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "list = new list_1.default();",
                "err": {},
                "isRoot": false,
                "uuid": "c77cca78-7496-4301-9612-93d84b98ad10",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 0 when List is empty",
                "fullTitle": "List<T> #size() should return 0 when List is empty",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai_1.expect(list.size()).to.equal(0);\ndone();",
                "err": {},
                "isRoot": false,
                "uuid": "6d590627-00b0-4491-951e-29acdb53df9d",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return 10 when List has 10 items",
                "fullTitle": "List<T> #size() should return 10 when List has 10 items",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "list.add(0, 'a');\nlist.add(1, 'b');\nlist.add(2, 'c');\nlist.add(3, 'd');\nlist.add(4, 'e');\nlist.add(5, 'f');\nlist.add(6, 'g');\nlist.add(7, 'h');\nlist.add(8, 'i');\nlist.add(9, 'j');\nchai_1.expect(list.size()).to.equal(10);\ndone();",
                "err": {},
                "isRoot": false,
                "uuid": "1f756ab0-1899-4545-b082-a721a44d1a77",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "6d590627-00b0-4491-951e-29acdb53df9d",
              "1f756ab0-1899-4545-b082-a721a44d1a77"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "e3fee407-d718-493b-9edd-5ee118041396",
        "title": "Stack<T>",
        "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/stack/index.spec.ts",
        "file": "/src/stack/index.spec.ts",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "d863d067-0b5f-4120-b4d0-0d1453e8268c",
            "title": "#push()",
            "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/stack/index.spec.ts",
            "file": "/src/stack/index.spec.ts",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should peek return test when the test pushed",
                "fullTitle": "Stack<T> #push() should peek return test when the test pushed",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "myStack = new index_1.default();\nmyStack.push('test');\nchai_1.expect(myStack.peek()).equal('test');",
                "err": {},
                "isRoot": false,
                "uuid": "644c4cf8-7009-4ec7-ac0b-17b021b19f2c",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return 9 when the 10 elements pushed",
                "fullTitle": "Stack<T> #push() should return 9 when the 10 elements pushed",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "myStack = new index_1.default();\nfor (var index = 0; index < 10; index++) {\n    var elem = index;\n    myStack.push(elem);\n}\nchai_1.expect(myStack.peek()).equal(9);",
                "err": {},
                "isRoot": false,
                "uuid": "7f0f262c-19d1-4541-8b1a-617f4467ceaf",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "644c4cf8-7009-4ec7-ac0b-17b021b19f2c",
              "7f0f262c-19d1-4541-8b1a-617f4467ceaf"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "53bf0975-79d8-4938-bac9-4905335096e1",
            "title": "#pop()",
            "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/stack/index.spec.ts",
            "file": "/src/stack/index.spec.ts",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should throws Error [Stack overflow] when pop empty stack",
                "fullTitle": "Stack<T> #pop() should throws Error [Stack overflow] when pop empty stack",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "myStack = new index_1.default();\nchai_1.expect(myStack.pop).to.throw(Error);",
                "err": {},
                "isRoot": false,
                "uuid": "ba7b1878-1203-4868-8f94-0408f11ec436",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should pop return popTest when the popTest pushed",
                "fullTitle": "Stack<T> #pop() should pop return popTest when the popTest pushed",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "myStack = new index_1.default();\nmyStack.push('popTest');\nchai_1.expect(myStack.pop()).equal('popTest');",
                "err": {},
                "isRoot": false,
                "uuid": "24e8d672-bc40-4e00-87e5-f88c8c5e3fd0",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "ba7b1878-1203-4868-8f94-0408f11ec436",
              "24e8d672-bc40-4e00-87e5-f88c8c5e3fd0"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "f3962b46-61de-4251-b900-27187c056f8c",
            "title": "#isEmpty()",
            "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/stack/index.spec.ts",
            "file": "/src/stack/index.spec.ts",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return true when stack is empty",
                "fullTitle": "Stack<T> #isEmpty() should return true when stack is empty",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "myStack = new index_1.default();\nchai_1.expect(myStack.isEmpty()).equal(true);",
                "err": {},
                "isRoot": false,
                "uuid": "e86a803a-edba-4aca-8a58-9873b645dd82",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return false when stack is not empty",
                "fullTitle": "Stack<T> #isEmpty() should return false when stack is not empty",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "myStack = new index_1.default();\nmyStack.push(0);\nchai_1.expect(myStack.isEmpty()).equal(false);",
                "err": {},
                "isRoot": false,
                "uuid": "f8811e8f-7467-4d3e-8360-680fd7a3fdf4",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "e86a803a-edba-4aca-8a58-9873b645dd82",
              "f8811e8f-7467-4d3e-8360-680fd7a3fdf4"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "d61d19f7-f096-4183-af74-24076042c0b1",
            "title": "#size()",
            "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/stack/index.spec.ts",
            "file": "/src/stack/index.spec.ts",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 0 when stack is empty",
                "fullTitle": "Stack<T> #size() should return 0 when stack is empty",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "myStack = new index_1.default();\nchai_1.expect(myStack.size()).equal(0);",
                "err": {},
                "isRoot": false,
                "uuid": "c98ec069-1494-42ae-91d7-18158afab8da",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return 1 when stack has one item",
                "fullTitle": "Stack<T> #size() should return 1 when stack has one item",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "myStack = new index_1.default();\nmyStack.push(0);\nchai_1.expect(myStack.size()).equal(1);",
                "err": {},
                "isRoot": false,
                "uuid": "38745bb1-e3bc-4c9e-890a-b06e26c9bbdc",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "c98ec069-1494-42ae-91d7-18158afab8da",
              "38745bb1-e3bc-4c9e-890a-b06e26c9bbdc"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "b0350ea9-9cbe-4153-876f-02663d2c0cb4",
            "title": "#clear()",
            "fullFile": "/home/travis/build/vandbt/typescript-datastructure/src/stack/index.spec.ts",
            "file": "/src/stack/index.spec.ts",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return true when stack called clear",
                "fullTitle": "Stack<T> #clear() should return true when stack called clear",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "myStack = new index_1.default();\nmyStack.push(0);\nmyStack.clear();\nchai_1.expect(myStack.isEmpty()).equal(true);",
                "err": {},
                "isRoot": false,
                "uuid": "0f2b6b7f-c430-4b3b-b934-1b772ce93097",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return size 0 when stack called clear",
                "fullTitle": "Stack<T> #clear() should return size 0 when stack called clear",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "myStack = new index_1.default();\nmyStack.push(0);\nmyStack.clear();\nchai_1.expect(myStack.size()).equal(0);",
                "err": {},
                "isRoot": false,
                "uuid": "9a20ae15-f806-43e3-bdba-c38662154da3",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "0f2b6b7f-c430-4b3b-b934-1b772ce93097",
              "9a20ae15-f806-43e3-bdba-c38662154da3"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2018
}